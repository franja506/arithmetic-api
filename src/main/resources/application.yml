spring:
  kafka:
    bootstrap-servers: localhost:9092
    listener:
      ack-mode: "manual_immediate"
      missing-topics-fatal: false
    consumer:
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            value:
              default:
                type: 'com.pachico.arithmetic.domain.Operation'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:postgresql://localhost:5432/arithmetic
    driver-class-name: org.postgresql.Driver
    username: franjagonca
    password: franjagonca
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/liquibase-changelog.yml
    enabled: true
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000, expireAfterAccess=1800s
bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url: .*
      http-response-body: "{ \"title\": \"Too Many Requests\",\"status\": 429,
      \"detail\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - bandwidths:
            - capacity: 3
              time: 60
              unit: seconds
              refill-speed: interval
springdoc:
  swagger-ui:
    path: /swagger-ui
  api-docs:
    path: /api-docs

franjagonca:
  openapi:
    local-url: http://localhost:8080
    prod-url: https://localhost:8080
  rest:
    api-key: ${API_KEY}
    base-url: https://bf2af314-c73f-416a-8e93-26c479a00ecc.mock.pstmn.io

event:
  topic:
    operation:
      created: created.operation
  group:
    persist:
      operation: persist.operation